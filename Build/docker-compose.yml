version: '3'
name: ntss
services:
  ntss_database:
    container_name: ntss_database
    image: mariadb
    env_file:
      - .dbenvvars
    ports:
      - "33061:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mariadb -u $$MYSQL_USER -p$$MYSQL_PWD" ]
      interval: 1s
      timeout: 2s
      retries: 200
    volumes:
      - type: bind
        source: ./database_setup/
        target: /docker-entrypoint-initdb.d/
      - type: volume
        source: dbdata
        target: /var/lib/mysql
        volume:
          nocopy: true
  redis_cache:
    container_name: redis_cache
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOSTS=ntss_database
    depends_on:
      ntss_database:
        condition: service_healthy
  app:
    container_name: ntss_app
    image: ntss_app
    build:
      context: ../
      dockerfile: ./Build/dockerfile
      args:
        OS_NAME: "debian"
        OS_VERSION: "bookworm"
        PYTHON_MAJOR_VERSION: 3
        PYTHON_MINOR_VERSION: 11
        PYTHON_PATCH_VERSION: 2
    depends_on:
      ntss_database:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    env_file:
      - .appenvvars
    ports:
      - "8889:80"
    expose:
      - 8889
    restart: unless-stopped
    volumes:
      - ../ntss_www:/app/ntss_www/
      - ../ntss_bin:/app/ntss_bin/
      - ../tests:/app/tests/

volumes:
  dbdata: